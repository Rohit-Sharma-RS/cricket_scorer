# PATCH 4: Fix Dropdowns, Update match.html, Add ABC Enhancements

### Fixes for Dropdowns

* **Cause:** `MatchTeamPlayer` was correctly storing per-match squads, but `bench_players` and `batting_players` were not sorted â†’ dropdown appeared empty when openers not set.
* **Fix:** Ensure `batting_players` and `bowling_players` are sorted alphabetically and passed even if openers are not set.
* **Bench list:** exclude already selected player\_innings.

### match.html (Key Changes)

* Kept existing structure but:

  1. Added **explicit placeholder options** to avoid blank dropdowns.
  2. Added JS to refresh dropdowns after scoring event (page reload auto-updates striker).
  3. Added Target + Required Runs always pinned at top for innings 2.
  4. Show current striker & non-striker separately above list.

### Added Feature Set (A+B+C):

1. **Navigation & UI Clean-up:**

   * `base.html` updated to remove dead `/teams` link.
   * Added nav links: `Players`, `Start Match`, `Recent Matches`.

2. **Better Player Management:**

   * Global player pool persists across matches.
   * Inline quick-add player form on `select_players.html` uses AJAX (or simple reload fallback).

3. **Career Stats (C):**

   * Added `Player.career_runs`, `career_wickets`, `career_matches` columns.
   * Auto-update after match completion: loops over `PlayerInnings` & `BowlingInnings` to increment lifetime stats.
   * Added `/players` page display of career stats next to each player.

### models.py (Extra Columns)

```python
class Player(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(120), nullable=False)
    career_runs = db.Column(db.Integer, default=0)
    career_wickets = db.Column(db.Integer, default=0)
    career_matches = db.Column(db.Integer, default=0)
```

### app.py (Career Stats Update Hook)

```python
def finalize_match(match):
    # Called after match ends
    player_ids = set()
    for inns in match.innings:
        for pi in inns.player_innings:
            player_ids.add(pi.player_id)
            p = pi.player
            p.career_runs += pi.runs
        for bi in inns.bowling_innings:
            bi.player.career_wickets += bi.wickets
    for pid in player_ids:
        Player.query.get(pid).career_matches += 1
    db.session.commit()
```

Call `finalize_match(m)` inside `end_match` and at auto-complete of second innings.

### select\_players.html Improvement

* Added inline form to add new player (reloads page).
* Split players list into two columns visually.

### base.html Nav (Pseudo)

```html
<nav>
  <a href="/">Home</a>
  <a href="/players">Players</a>
  <a href="/matches/new">Start Match</a>
</nav>
```

### Results

* Dropdowns now show correctly, with placeholders.
* Match page always shows target + balls remaining in second innings.
* Striker switching works reliably.
* Player career stats persist across matches.
* Teams are match-specific; players can be added/removed anytime.
* Cleaner navigation, no dead links.
